
fcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@GLIBCXX_3.4>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <_ZNSirsERi@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <_ZNSirsERi@GLIBCXX_3.4>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <__cxa_atexit@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <__cxa_atexit@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <time@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <time@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <_ZNSolsEPFRSoS_E@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <_ZNSt8ios_base4InitC1Ev@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <_ZNSolsEi@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <_ZNSolsEi@GLIBCXX_3.4>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	ff 25 12 2f 00 00    	jmpq   *0x2f12(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    10b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	31 ed                	xor    %ebp,%ebp
    10c2:	49 89 d1             	mov    %rdx,%r9
    10c5:	5e                   	pop    %rsi
    10c6:	48 89 e2             	mov    %rsp,%rdx
    10c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10cd:	50                   	push   %rax
    10ce:	54                   	push   %rsp
    10cf:	4c 8d 05 ba 06 00 00 	lea    0x6ba(%rip),%r8        # 1790 <__libc_csu_fini>
    10d6:	48 8d 0d 53 06 00 00 	lea    0x653(%rip),%rcx        # 1730 <__libc_csu_init>
    10dd:	48 8d 3d dd 02 00 00 	lea    0x2dd(%rip),%rdi        # 13c1 <main>
    10e4:	ff 15 f6 2e 00 00    	callq  *0x2ef6(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ea:	f4                   	hlt    
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 71 2f 00 00 	lea    0x2f71(%rip),%rdi        # 4068 <__TMC_END__>
    10f7:	48 8d 05 6a 2f 00 00 	lea    0x2f6a(%rip),%rax        # 4068 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d 41 2f 00 00 	lea    0x2f41(%rip),%rdi        # 4068 <__TMC_END__>
    1127:	48 8d 35 3a 2f 00 00 	lea    0x2f3a(%rip),%rsi        # 4068 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	80 3d 69 32 00 00 00 	cmpb   $0x0,0x3269(%rip)        # 43d0 <completed.0>
    1167:	75 2f                	jne    1198 <__do_global_dtors_aux+0x38>
    1169:	55                   	push   %rbp
    116a:	48 83 3d 56 2e 00 00 	cmpq   $0x0,0x2e56(%rip)        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    1171:	00 
    1172:	48 89 e5             	mov    %rsp,%rbp
    1175:	74 0c                	je     1183 <__do_global_dtors_aux+0x23>
    1177:	48 8b 3d e2 2e 00 00 	mov    0x2ee2(%rip),%rdi        # 4060 <__dso_handle>
    117e:	e8 2d ff ff ff       	callq  10b0 <__cxa_finalize@plt>
    1183:	e8 68 ff ff ff       	callq  10f0 <deregister_tm_clones>
    1188:	c6 05 41 32 00 00 01 	movb   $0x1,0x3241(%rip)        # 43d0 <completed.0>
    118f:	5d                   	pop    %rbp
    1190:	c3                   	retq   
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	e9 7b ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a5 <_Z10evalue_fcciiPi>:
#include <iostream>
#include <ctime>

using namespace std;

void evalue_fcc(int id, int in, int* res){
    11a5:	55                   	push   %rbp
    11a6:	48 89 e5             	mov    %rsp,%rbp
    11a9:	48 83 ec 30          	sub    $0x30,%rsp
    11ad:	89 7d dc             	mov    %edi,-0x24(%rbp)
    11b0:	89 75 d8             	mov    %esi,-0x28(%rbp)
    11b3:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  int vote[3]={0, 0, 0}; // vote[0]-feuille, vote[1]-caillou, vote[2]-ciseaux 
    11b7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    11be:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    11c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  int ordi[3]={0, 0, 0}; // ordi[0]-feuille, ordi[1]-caillou, ordi[2]-ciseaux 
    11cc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    11d3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    11da:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  int i, alea;

  vote[in]+=id;
    11e1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    11e4:	48 98                	cltq   
    11e6:	8b 54 85 ec          	mov    -0x14(%rbp,%rax,4),%edx
    11ea:	8b 45 dc             	mov    -0x24(%rbp),%eax
    11ed:	01 c2                	add    %eax,%edx
    11ef:	8b 45 d8             	mov    -0x28(%rbp),%eax
    11f2:	48 98                	cltq   
    11f4:	89 54 85 ec          	mov    %edx,-0x14(%rbp,%rax,4)

  alea = time(0) % 3;
    11f8:	bf 00 00 00 00       	mov    $0x0,%edi
    11fd:	e8 5e fe ff ff       	callq  1060 <time@plt>
    1202:	48 89 c1             	mov    %rax,%rcx
    1205:	48 ba 56 55 55 55 55 	movabs $0x5555555555555556,%rdx
    120c:	55 55 55 
    120f:	48 89 c8             	mov    %rcx,%rax
    1212:	48 f7 ea             	imul   %rdx
    1215:	48 89 ce             	mov    %rcx,%rsi
    1218:	48 c1 fe 3f          	sar    $0x3f,%rsi
    121c:	48 89 d0             	mov    %rdx,%rax
    121f:	48 29 f0             	sub    %rsi,%rax
    1222:	48 89 c2             	mov    %rax,%rdx
    1225:	48 01 d2             	add    %rdx,%rdx
    1228:	48 01 c2             	add    %rax,%rdx
    122b:	48 89 c8             	mov    %rcx,%rax
    122e:	48 29 d0             	sub    %rdx,%rax
    1231:	89 45 f8             	mov    %eax,-0x8(%rbp)
  ordi[alea]+=id;
    1234:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1237:	48 98                	cltq   
    1239:	8b 54 85 e0          	mov    -0x20(%rbp,%rax,4),%edx
    123d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1240:	01 c2                	add    %eax,%edx
    1242:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1245:	48 98                	cltq   
    1247:	89 54 85 e0          	mov    %edx,-0x20(%rbp,%rax,4)
  cout << "L'ordi a mise sur ";
    124b:	48 8d 35 b7 0d 00 00 	lea    0xdb7(%rip),%rsi        # 2009 <_ZStL19piecewise_construct+0x1>
    1252:	48 8d 3d 27 2e 00 00 	lea    0x2e27(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1259:	e8 12 fe ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  if ( ordi[0] )
    125e:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1261:	85 c0                	test   %eax,%eax
    1263:	74 15                	je     127a <_Z10evalue_fcciiPi+0xd5>
    cout << "Feuille";
    1265:	48 8d 35 b0 0d 00 00 	lea    0xdb0(%rip),%rsi        # 201c <_ZStL19piecewise_construct+0x14>
    126c:	48 8d 3d 0d 2e 00 00 	lea    0x2e0d(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1273:	e8 f8 fd ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1278:	eb 2f                	jmp    12a9 <_Z10evalue_fcciiPi+0x104>
  else if ( ordi[1] )
    127a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    127d:	85 c0                	test   %eax,%eax
    127f:	74 15                	je     1296 <_Z10evalue_fcciiPi+0xf1>
    cout << "Caillou";
    1281:	48 8d 35 9c 0d 00 00 	lea    0xd9c(%rip),%rsi        # 2024 <_ZStL19piecewise_construct+0x1c>
    1288:	48 8d 3d f1 2d 00 00 	lea    0x2df1(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    128f:	e8 dc fd ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1294:	eb 13                	jmp    12a9 <_Z10evalue_fcciiPi+0x104>
  else 
    cout << "Ciseaux";
    1296:	48 8d 35 8f 0d 00 00 	lea    0xd8f(%rip),%rsi        # 202c <_ZStL19piecewise_construct+0x24>
    129d:	48 8d 3d dc 2d 00 00 	lea    0x2ddc(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    12a4:	e8 c7 fd ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  cout << ". ";
    12a9:	48 8d 35 84 0d 00 00 	lea    0xd84(%rip),%rsi        # 2034 <_ZStL19piecewise_construct+0x2c>
    12b0:	48 8d 3d c9 2d 00 00 	lea    0x2dc9(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    12b7:	e8 b4 fd ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>

  *res = 0; // égal
    12bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    12c0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  for (i=0; i<3; i++){
    12c6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12cd:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    12d1:	0f 8f 8b 00 00 00    	jg     1362 <_Z10evalue_fcciiPi+0x1bd>
     if ( vote[i] )
    12d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12da:	48 98                	cltq   
    12dc:	8b 44 85 ec          	mov    -0x14(%rbp,%rax,4),%eax
    12e0:	85 c0                	test   %eax,%eax
    12e2:	74 75                	je     1359 <_Z10evalue_fcciiPi+0x1b4>
     {
        switch (i)
    12e4:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    12e8:	74 52                	je     133c <_Z10evalue_fcciiPi+0x197>
    12ea:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    12ee:	7f 69                	jg     1359 <_Z10evalue_fcciiPi+0x1b4>
    12f0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    12f4:	74 08                	je     12fe <_Z10evalue_fcciiPi+0x159>
    12f6:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    12fa:	74 21                	je     131d <_Z10evalue_fcciiPi+0x178>
    12fc:	eb 5b                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
        {
           case 0: // vote feuille
              if (ordi[2]) // ordi vote ciseaux
    12fe:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1301:	85 c0                	test   %eax,%eax
    1303:	74 0c                	je     1311 <_Z10evalue_fcciiPi+0x16c>
                 *res = 1; // perdu
    1305:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1309:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
              else
                 *res = 0; // gagne
              break;
    130f:	eb 48                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
                 *res = 0; // gagne
    1311:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1315:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
              break;
    131b:	eb 3c                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
           case 1: // vote caillou
              if (ordi[0]) // ordi vote ciseaux
    131d:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1320:	85 c0                	test   %eax,%eax
    1322:	74 0c                	je     1330 <_Z10evalue_fcciiPi+0x18b>
                 *res = 1; // perdu
    1324:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1328:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
              else
                 *res = 0; // gagne
              break;
    132e:	eb 29                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
                 *res = 0; // gagne
    1330:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1334:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
              break;
    133a:	eb 1d                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
           case 2: // vote ciseaux
              if (ordi[1]) // ordi vote ciseaux
    133c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    133f:	85 c0                	test   %eax,%eax
    1341:	74 0c                	je     134f <_Z10evalue_fcciiPi+0x1aa>
                 *res = 1; // perdu     
    1343:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1347:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    134d:	eb 0a                	jmp    1359 <_Z10evalue_fcciiPi+0x1b4>
              else
                 *res = 0; // gagne              
    134f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1353:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  for (i=0; i<3; i++){
    1359:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    135d:	e9 6b ff ff ff       	jmpq   12cd <_Z10evalue_fcciiPi+0x128>
        }
     }
  }

  if (*res != 0){
    1362:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1366:	8b 00                	mov    (%rax),%eax
    1368:	85 c0                	test   %eax,%eax
    136a:	74 2a                	je     1396 <_Z10evalue_fcciiPi+0x1f1>
    cout << "Perdu :-(" << endl;	    
    136c:	48 8d 35 c4 0c 00 00 	lea    0xcc4(%rip),%rsi        # 2037 <_ZStL19piecewise_construct+0x2f>
    1373:	48 8d 3d 06 2d 00 00 	lea    0x2d06(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    137a:	e8 f1 fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    137f:	48 89 c2             	mov    %rax,%rdx
    1382:	48 8b 05 47 2c 00 00 	mov    0x2c47(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1389:	48 89 c6             	mov    %rax,%rsi
    138c:	48 89 d7             	mov    %rdx,%rdi
    138f:	e8 ec fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
  }
  else
    cout << "Gagne :-)" << endl;	    
}
    1394:	eb 28                	jmp    13be <_Z10evalue_fcciiPi+0x219>
    cout << "Gagne :-)" << endl;	    
    1396:	48 8d 35 a4 0c 00 00 	lea    0xca4(%rip),%rsi        # 2041 <_ZStL19piecewise_construct+0x39>
    139d:	48 8d 3d dc 2c 00 00 	lea    0x2cdc(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    13a4:	e8 c7 fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    13a9:	48 89 c2             	mov    %rax,%rdx
    13ac:	48 8b 05 1d 2c 00 00 	mov    0x2c1d(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    13b3:	48 89 c6             	mov    %rax,%rsi
    13b6:	48 89 d7             	mov    %rdx,%rdi
    13b9:	e8 c2 fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
}
    13be:	90                   	nop
    13bf:	c9                   	leaveq 
    13c0:	c3                   	retq   

00000000000013c1 <main>:

int main(){
    13c1:	55                   	push   %rbp
    13c2:	48 89 e5             	mov    %rsp,%rbp
    13c5:	48 83 ec 20          	sub    $0x20,%rsp
	int score=0;
    13c9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
	int vote, id, i, res;
        
        // message de bienvenue
	cout << "Bienvenue dans le jeux Feuille-Caillou-Ciseaux" << endl
    13d0:	48 8d 35 79 0c 00 00 	lea    0xc79(%rip),%rsi        # 2050 <_ZStL19piecewise_construct+0x48>
    13d7:	48 8d 3d a2 2c 00 00 	lea    0x2ca2(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    13de:	e8 8d fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    13e3:	48 89 c2             	mov    %rax,%rdx
    13e6:	48 8b 05 e3 2b 00 00 	mov    0x2be3(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    13ed:	48 89 c6             	mov    %rax,%rsi
    13f0:	48 89 d7             	mov    %rdx,%rdi
    13f3:	e8 88 fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
             << "----------------------------------------------" << endl
    13f8:	48 8d 35 81 0c 00 00 	lea    0xc81(%rip),%rsi        # 2080 <_ZStL19piecewise_construct+0x78>
    13ff:	48 89 c7             	mov    %rax,%rdi
    1402:	e8 69 fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1407:	48 89 c2             	mov    %rax,%rdx
    140a:	48 8b 05 bf 2b 00 00 	mov    0x2bbf(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1411:	48 89 c6             	mov    %rax,%rsi
    1414:	48 89 d7             	mov    %rdx,%rdi
    1417:	e8 64 fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
    141c:	48 89 c2             	mov    %rax,%rdx
             << endl
    141f:	48 8b 05 aa 2b 00 00 	mov    0x2baa(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1426:	48 89 c6             	mov    %rax,%rsi
    1429:	48 89 d7             	mov    %rdx,%rdi
    142c:	e8 4f fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
             << "Vous devez gagner un maximum de fois." << endl
    1431:	48 8d 35 78 0c 00 00 	lea    0xc78(%rip),%rsi        # 20b0 <_ZStL19piecewise_construct+0xa8>
    1438:	48 89 c7             	mov    %rax,%rdi
    143b:	e8 30 fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1440:	48 89 c2             	mov    %rax,%rdx
    1443:	48 8b 05 86 2b 00 00 	mov    0x2b86(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    144a:	48 89 c6             	mov    %rax,%rsi
    144d:	48 89 d7             	mov    %rdx,%rdi
    1450:	e8 2b fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
             << "Chaque fois que vous perdez, votre score augmente d'un point." << endl
    1455:	48 8d 35 7c 0c 00 00 	lea    0xc7c(%rip),%rsi        # 20d8 <_ZStL19piecewise_construct+0xd0>
    145c:	48 89 c7             	mov    %rax,%rdi
    145f:	e8 0c fc ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1464:	48 89 c2             	mov    %rax,%rdx
    1467:	48 8b 05 62 2b 00 00 	mov    0x2b62(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    146e:	48 89 c6             	mov    %rax,%rsi
    1471:	48 89 d7             	mov    %rdx,%rdi
    1474:	e8 07 fc ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
             << "L'objectif est de terminer avec un score de 0." << endl
    1479:	48 8d 35 98 0c 00 00 	lea    0xc98(%rip),%rsi        # 2118 <_ZStL19piecewise_construct+0x110>
    1480:	48 89 c7             	mov    %rax,%rdi
    1483:	e8 e8 fb ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1488:	48 89 c2             	mov    %rax,%rdx
    148b:	48 8b 05 3e 2b 00 00 	mov    0x2b3e(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1492:	48 89 c6             	mov    %rax,%rsi
    1495:	48 89 d7             	mov    %rdx,%rdi
    1498:	e8 e3 fb ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
    149d:	48 89 c2             	mov    %rax,%rdx
             << endl;
    14a0:	48 8b 05 29 2b 00 00 	mov    0x2b29(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    14a7:	48 89 c6             	mov    %rax,%rsi
    14aa:	48 89 d7             	mov    %rdx,%rdi
    14ad:	e8 ce fb ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>

        // choix de l'identifiant
	cout << "Entrez votre identifiant entre 1 et 1000 : ";
    14b2:	48 8d 35 8f 0c 00 00 	lea    0xc8f(%rip),%rsi        # 2148 <_ZStL19piecewise_construct+0x140>
    14b9:	48 8d 3d c0 2b 00 00 	lea    0x2bc0(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    14c0:	e8 ab fb ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
	while ( ! ( cin >> id ) )
    14c5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    14c9:	48 89 c6             	mov    %rax,%rsi
    14cc:	48 8d 3d cd 2c 00 00 	lea    0x2ccd(%rip),%rdi        # 41a0 <_ZSt3cin@@GLIBCXX_3.4>
    14d3:	e8 68 fb ff ff       	callq  1040 <_ZNSirsERi@plt>
    14d8:	48 8b 10             	mov    (%rax),%rdx
    14db:	48 83 ea 18          	sub    $0x18,%rdx
    14df:	48 8b 12             	mov    (%rdx),%rdx
    14e2:	48 01 d0             	add    %rdx,%rax
    14e5:	48 89 c7             	mov    %rax,%rdi
    14e8:	e8 43 fb ff ff       	callq  1030 <_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@plt>
    14ed:	84 c0                	test   %al,%al
    14ef:	74 15                	je     1506 <main+0x145>
	  {
	    cerr << "Erreur de saisie.\n";
    14f1:	48 8d 35 7c 0c 00 00 	lea    0xc7c(%rip),%rsi        # 2174 <_ZStL19piecewise_construct+0x16c>
    14f8:	48 8d 3d c1 2d 00 00 	lea    0x2dc1(%rip),%rdi        # 42c0 <_ZSt4cerr@@GLIBCXX_3.4>
    14ff:	e8 6c fb ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
	while ( ! ( cin >> id ) )
    1504:	eb bf                	jmp    14c5 <main+0x104>
	  }
	cout << endl;
    1506:	48 8b 05 c3 2a 00 00 	mov    0x2ac3(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    150d:	48 89 c6             	mov    %rax,%rsi
    1510:	48 8d 3d 69 2b 00 00 	lea    0x2b69(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1517:	e8 64 fb ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>

        // deroulement des 10 rounds de jeu
	for (i=0; i<10; i++){
    151c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1523:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
    1527:	0f 8f 4f 01 00 00    	jg     167c <main+0x2bb>
	  cout << "--- Round " << i+1 << " ---" << endl;
    152d:	48 8d 35 53 0c 00 00 	lea    0xc53(%rip),%rsi        # 2187 <_ZStL19piecewise_construct+0x17f>
    1534:	48 8d 3d 45 2b 00 00 	lea    0x2b45(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    153b:	e8 30 fb ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1540:	48 89 c2             	mov    %rax,%rdx
    1543:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1546:	83 c0 01             	add    $0x1,%eax
    1549:	89 c6                	mov    %eax,%esi
    154b:	48 89 d7             	mov    %rdx,%rdi
    154e:	e8 4d fb ff ff       	callq  10a0 <_ZNSolsEi@plt>
    1553:	48 8d 35 38 0c 00 00 	lea    0xc38(%rip),%rsi        # 2192 <_ZStL19piecewise_construct+0x18a>
    155a:	48 89 c7             	mov    %rax,%rdi
    155d:	e8 0e fb ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1562:	48 89 c2             	mov    %rax,%rdx
    1565:	48 8b 05 64 2a 00 00 	mov    0x2a64(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    156c:	48 89 c6             	mov    %rax,%rsi
    156f:	48 89 d7             	mov    %rdx,%rdi
    1572:	e8 09 fb ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
	  cout << "Choisissez "
               << "[0] Feuille, "
               << "[1] Caillou, "
               << "[2] Ciseaux : ";
    1577:	48 8d 35 19 0c 00 00 	lea    0xc19(%rip),%rsi        # 2197 <_ZStL19piecewise_construct+0x18f>
    157e:	48 8d 3d fb 2a 00 00 	lea    0x2afb(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1585:	e8 e6 fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    158a:	48 8d 35 12 0c 00 00 	lea    0xc12(%rip),%rsi        # 21a3 <_ZStL19piecewise_construct+0x19b>
    1591:	48 89 c7             	mov    %rax,%rdi
    1594:	e8 d7 fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    1599:	48 8d 35 11 0c 00 00 	lea    0xc11(%rip),%rsi        # 21b1 <_ZStL19piecewise_construct+0x1a9>
    15a0:	48 89 c7             	mov    %rax,%rdi
    15a3:	e8 c8 fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    15a8:	48 8d 35 10 0c 00 00 	lea    0xc10(%rip),%rsi        # 21bf <_ZStL19piecewise_construct+0x1b7>
    15af:	48 89 c7             	mov    %rax,%rdi
    15b2:	e8 b9 fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
	  while ( ! ( cin >> vote ) )
    15b7:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    15bb:	48 89 c6             	mov    %rax,%rsi
    15be:	48 8d 3d db 2b 00 00 	lea    0x2bdb(%rip),%rdi        # 41a0 <_ZSt3cin@@GLIBCXX_3.4>
    15c5:	e8 76 fa ff ff       	callq  1040 <_ZNSirsERi@plt>
    15ca:	48 8b 10             	mov    (%rax),%rdx
    15cd:	48 83 ea 18          	sub    $0x18,%rdx
    15d1:	48 8b 12             	mov    (%rdx),%rdx
    15d4:	48 01 d0             	add    %rdx,%rax
    15d7:	48 89 c7             	mov    %rax,%rdi
    15da:	e8 51 fa ff ff       	callq  1030 <_ZNKSt9basic_iosIcSt11char_traitsIcEEntEv@plt>
    15df:	84 c0                	test   %al,%al
    15e1:	74 15                	je     15f8 <main+0x237>
	    {
	      cerr << "Erreur de saisie.\n";
    15e3:	48 8d 35 8a 0b 00 00 	lea    0xb8a(%rip),%rsi        # 2174 <_ZStL19piecewise_construct+0x16c>
    15ea:	48 8d 3d cf 2c 00 00 	lea    0x2ccf(%rip),%rdi        # 42c0 <_ZSt4cerr@@GLIBCXX_3.4>
    15f1:	e8 7a fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
	  while ( ! ( cin >> vote ) )
    15f6:	eb bf                	jmp    15b7 <main+0x1f6>
	    }
	  cout << endl;
    15f8:	48 8b 05 d1 29 00 00 	mov    0x29d1(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    15ff:	48 89 c6             	mov    %rax,%rsi
    1602:	48 8d 3d 77 2a 00 00 	lea    0x2a77(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1609:	e8 72 fa ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>

	  evalue_fcc(id,vote,&res);     // evaluation du resultat du round
    160e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    1611:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1614:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    1618:	89 ce                	mov    %ecx,%esi
    161a:	89 c7                	mov    %eax,%edi
    161c:	e8 84 fb ff ff       	callq  11a5 <_Z10evalue_fcciiPi>

	  if (res != 0 || vote < 0 || vote > 2)
    1621:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1624:	85 c0                	test   %eax,%eax
    1626:	75 0f                	jne    1637 <main+0x276>
    1628:	8b 45 f4             	mov    -0xc(%rbp),%eax
    162b:	85 c0                	test   %eax,%eax
    162d:	78 08                	js     1637 <main+0x276>
    162f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1632:	83 f8 02             	cmp    $0x2,%eax
    1635:	7e 04                	jle    163b <main+0x27a>
	    score++;
    1637:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)

	  cout << "Score actuel est : " << score << endl;	    
    163b:	48 8d 35 8c 0b 00 00 	lea    0xb8c(%rip),%rsi        # 21ce <_ZStL19piecewise_construct+0x1c6>
    1642:	48 8d 3d 37 2a 00 00 	lea    0x2a37(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    1649:	e8 22 fa ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    164e:	48 89 c2             	mov    %rax,%rdx
    1651:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1654:	89 c6                	mov    %eax,%esi
    1656:	48 89 d7             	mov    %rdx,%rdi
    1659:	e8 42 fa ff ff       	callq  10a0 <_ZNSolsEi@plt>
    165e:	48 89 c2             	mov    %rax,%rdx
    1661:	48 8b 05 68 29 00 00 	mov    0x2968(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1668:	48 89 c6             	mov    %rax,%rsi
    166b:	48 89 d7             	mov    %rdx,%rdi
    166e:	e8 0d fa ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
	for (i=0; i<10; i++){
    1673:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1677:	e9 a7 fe ff ff       	jmpq   1523 <main+0x162>
	}
	
        // affichage du score final
	cout << endl;
    167c:	48 8b 05 4d 29 00 00 	mov    0x294d(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    1683:	48 89 c6             	mov    %rax,%rsi
    1686:	48 8d 3d f3 29 00 00 	lea    0x29f3(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    168d:	e8 ee f9 ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>
	cout << "Votre score final est :" << score << endl;
    1692:	48 8d 35 49 0b 00 00 	lea    0xb49(%rip),%rsi        # 21e2 <_ZStL19piecewise_construct+0x1da>
    1699:	48 8d 3d e0 29 00 00 	lea    0x29e0(%rip),%rdi        # 4080 <_ZSt4cout@@GLIBCXX_3.4>
    16a0:	e8 cb f9 ff ff       	callq  1070 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    16a5:	48 89 c2             	mov    %rax,%rdx
    16a8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ab:	89 c6                	mov    %eax,%esi
    16ad:	48 89 d7             	mov    %rdx,%rdi
    16b0:	e8 eb f9 ff ff       	callq  10a0 <_ZNSolsEi@plt>
    16b5:	48 89 c2             	mov    %rax,%rdx
    16b8:	48 8b 05 11 29 00 00 	mov    0x2911(%rip),%rax        # 3fd0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    16bf:	48 89 c6             	mov    %rax,%rsi
    16c2:	48 89 d7             	mov    %rdx,%rdi
    16c5:	e8 b6 f9 ff ff       	callq  1080 <_ZNSolsEPFRSoS_E@plt>

	return 0;
    16ca:	b8 00 00 00 00       	mov    $0x0,%eax
}
    16cf:	c9                   	leaveq 
    16d0:	c3                   	retq   

00000000000016d1 <_Z41__static_initialization_and_destruction_0ii>:
    16d1:	55                   	push   %rbp
    16d2:	48 89 e5             	mov    %rsp,%rbp
    16d5:	48 83 ec 10          	sub    $0x10,%rsp
    16d9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    16dc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    16df:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    16e3:	75 32                	jne    1717 <_Z41__static_initialization_and_destruction_0ii+0x46>
    16e5:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    16ec:	75 29                	jne    1717 <_Z41__static_initialization_and_destruction_0ii+0x46>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    16ee:	48 8d 3d dc 2c 00 00 	lea    0x2cdc(%rip),%rdi        # 43d1 <_ZStL8__ioinit>
    16f5:	e8 96 f9 ff ff       	callq  1090 <_ZNSt8ios_base4InitC1Ev@plt>
    16fa:	48 8d 15 5f 29 00 00 	lea    0x295f(%rip),%rdx        # 4060 <__dso_handle>
    1701:	48 8d 35 c9 2c 00 00 	lea    0x2cc9(%rip),%rsi        # 43d1 <_ZStL8__ioinit>
    1708:	48 8b 05 e9 28 00 00 	mov    0x28e9(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    170f:	48 89 c7             	mov    %rax,%rdi
    1712:	e8 39 f9 ff ff       	callq  1050 <__cxa_atexit@plt>
    1717:	90                   	nop
    1718:	c9                   	leaveq 
    1719:	c3                   	retq   

000000000000171a <_GLOBAL__sub_I__Z10evalue_fcciiPi>:
    171a:	55                   	push   %rbp
    171b:	48 89 e5             	mov    %rsp,%rbp
    171e:	be ff ff 00 00       	mov    $0xffff,%esi
    1723:	bf 01 00 00 00       	mov    $0x1,%edi
    1728:	e8 a4 ff ff ff       	callq  16d1 <_Z41__static_initialization_and_destruction_0ii>
    172d:	5d                   	pop    %rbp
    172e:	c3                   	retq   
    172f:	90                   	nop

0000000000001730 <__libc_csu_init>:
    1730:	41 57                	push   %r15
    1732:	4c 8d 3d 87 26 00 00 	lea    0x2687(%rip),%r15        # 3dc0 <__frame_dummy_init_array_entry>
    1739:	41 56                	push   %r14
    173b:	49 89 d6             	mov    %rdx,%r14
    173e:	41 55                	push   %r13
    1740:	49 89 f5             	mov    %rsi,%r13
    1743:	41 54                	push   %r12
    1745:	41 89 fc             	mov    %edi,%r12d
    1748:	55                   	push   %rbp
    1749:	48 8d 2d 80 26 00 00 	lea    0x2680(%rip),%rbp        # 3dd0 <__do_global_dtors_aux_fini_array_entry>
    1750:	53                   	push   %rbx
    1751:	4c 29 fd             	sub    %r15,%rbp
    1754:	48 83 ec 08          	sub    $0x8,%rsp
    1758:	e8 a3 f8 ff ff       	callq  1000 <_init>
    175d:	48 c1 fd 03          	sar    $0x3,%rbp
    1761:	74 1b                	je     177e <__libc_csu_init+0x4e>
    1763:	31 db                	xor    %ebx,%ebx
    1765:	0f 1f 00             	nopl   (%rax)
    1768:	4c 89 f2             	mov    %r14,%rdx
    176b:	4c 89 ee             	mov    %r13,%rsi
    176e:	44 89 e7             	mov    %r12d,%edi
    1771:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1775:	48 83 c3 01          	add    $0x1,%rbx
    1779:	48 39 dd             	cmp    %rbx,%rbp
    177c:	75 ea                	jne    1768 <__libc_csu_init+0x38>
    177e:	48 83 c4 08          	add    $0x8,%rsp
    1782:	5b                   	pop    %rbx
    1783:	5d                   	pop    %rbp
    1784:	41 5c                	pop    %r12
    1786:	41 5d                	pop    %r13
    1788:	41 5e                	pop    %r14
    178a:	41 5f                	pop    %r15
    178c:	c3                   	retq   
    178d:	0f 1f 00             	nopl   (%rax)

0000000000001790 <__libc_csu_fini>:
    1790:	c3                   	retq   

Disassembly of section .fini:

0000000000001794 <_fini>:
    1794:	48 83 ec 08          	sub    $0x8,%rsp
    1798:	48 83 c4 08          	add    $0x8,%rsp
    179c:	c3                   	retq   
